/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF   0
#define NUM   1
#define FUN   2
#define QWERT 3
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  | BSLH |
// | TAB  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |  '   |
// | LGUI |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  | ENT  |
//                    | CTRL|LSHFT| SPC |   | BSPC| LWR | RSE |
                        display-name = "Base";
                        bindings = <
   &kp ESC  &kp Q  &kp W  &kp F  &kp P  &kp B    &kp J  &kp L  &kp U     &kp Y   &kp SEMI &kp BSLH
   &kp TAB  &kp A  &kp R  &kp S  &kp T  &kp G    &kp M  &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LGUI &kp Z  &kp X  &kp C  &kp D  &kp V    &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH &kp RET
                   &kp LCTRL &kp LSHIFT &kp SPACE &kp BSPC &trans  &to NUM
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  /  |  1  | 2(@) | 3(#) |  =  |   |  (   |  )   |  UP  | {[  |  ]} | BSLH |
// | TAB  |  *  | 4($)| 5(%) | 6(^) |  +  |   |  !   | LEFT | DOWN |RIGHT|  `  |  '   |
// | LGUI |  0  | 7(&)|  8   |  9   | - _ |   | PGUP | PGDN |  ,   |  .  |PASTE| ENT  |
//                    | ALT  |LSHFT | SPC |   | BSPC | LWR  | RSE  |
                        display-name = "Number";
                        bindings = <
   &kp ESC  &kp FSLH        &kp N1 &kp N2 &kp N3 &kp EQUAL    &kp LPAR  &kp RPAR  &kp UP    &kp LBKT &kp RBKT     &kp BSLH
   &kp TAB  &kp KP_MULTIPLY &kp N4 &kp N5 &kp N6 &kp PLUS     &kp EXCL  &kp LEFT  &kp DOWN &kp RIGHT &kp GRAVE    &kp SQT
   &kp LGUI &kp N0          &kp N7 &kp N8 &kp N9 &kp MINUS    &kp PG_UP &kp PG_DN &kp COMMA &kp DOT &kp C_AC_PASTE &kp RET
                    	    &kp LALT &kp LSHIFT &kp SPACE &kp BSPC &to DEF  &to FUN
                        >;
                };
                fun_layer {
// -----------------------------------------------------------------------------------------
// | ESC | F1 | F2  | F3  | F4  | DEL |   | PGUP |     |     |     |     | BTCLR |
// | TAB | F5 | F6  | F7  | F8  | ALT |   | PGDN | BT1 | BT2 | BT3 | BT4 | BT5 |
// | LGUI| F9 | F10 | F11 | F12 |     |   |      |     |     |     |     |     |
//             | LCTRL | LSHIFT | SPC |   | BSPC | LWR | RSE |
                        display-name = "Function";
                        bindings = <
   &kp ESC  &kp F1  &kp F2  &kp F3  &kp F4   &kp DEL   &kp PG_UP  &trans     &trans       &trans        &trans       &bt BT_CLR
   &kp TAB  &kp F5  &kp F6  &kp F7  &kp F8   &kp ALT   &kp PG_DN &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
   &kp LGUI &kp F9  &kp F10 &kp F11 &kp F12  &trans    &trans      &trans     &trans       &trans        &trans       &trans
                     &kp LCTRL &kp LSHIFT &kp SPACE    &kp BSPC &to NUM &to QWERT
                        >;
                };
                qwert_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSLH |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | ESC  |
//                    | CTRL|LSHFT| SPC |   | BSPC| LWR | RSE |
                        display-name = "QWERTY";
                        bindings = <
   &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T      &kp Y  &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &kp LCTRL &kp A  &kp S  &kp D  &kp F  &kp G      &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B      &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                    &kp LCTRL &kp LSHIFT &kp SPACE &kp BSPC &to FUN &kp EXCL
                        >;
                };
             
        };
};
